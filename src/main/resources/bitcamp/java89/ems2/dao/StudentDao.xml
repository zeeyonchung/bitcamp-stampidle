<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="bitcamp.java89.ems2.dao.StudentDao">

  <resultMap type="student" id="student-map">
    <id     column="mno"        property="memberNo"/>
    <result column="name"       property="name"/>
    <result column="email"      property="email"/>
    <result column="pwd"        property="password"/>
    <result column="tel"        property="tel"/>
    <result column="work"       property="working"/>
    <result column="lst_schl"   property="grade"/>
    <result column="schl_nm"    property="schoolName"/>
    <result column="pst_no"     property="postNo"/>
    <result column="bas_adr"    property="basicAddress"/>
    <result column="det_adr"    property="detailAddress"/>
    <result column="path"       property="photoPath"/>
  </resultMap>
  
  <select id="count" parameterType="string" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where email=#{value}
  </select>
  
  <select id="countByNo" parameterType="int" resultType="int">
    select count(*)
    from stud s 
      left outer join memb m on s.sno=m.mno
    where s.sno=#{value}
  </select>
  
  <select id="getList" resultMap="student-map">
    select 
      m.mno, 
      m.name, 
      m.tel, 
      m.email, 
      s.work, 
      s.lst_schl, 
      s.schl_nm, 
      s.path
    from stud s
      left outer join memb m on s.sno=m.mno
  </select>
  
  <select id="getOne" parameterType="int" resultMap="student-map">
    select
      m.mno,
      m.name, 
      m.tel, 
      m.email, 
      s.work, 
      s.lst_schl, 
      s.schl_nm, 
      s.path
    from stud s
      left outer join memb m on s.sno=m.mno
    where m.mno=#{value}
  </select>

  <insert id="insert" parameterType="student">
    insert into stud(sno,work,lst_schl,schl_nm,path) 
    values(
      #{memberNo},
      #{working},
      <!--  
      <choose>
        <when test="working == true">'Y'</when> 
        <otherwise>'N'</otherwise>
      </choose>,
      -->
      #{grade}, 
      #{schoolName}, 
      #{photoPath})
  </insert>  
  
  <update id="update" parameterType="student">
    update stud set
	    work=#{working}, 
	    lst_schl=#{grade}, 
	    schl_nm=#{schoolName}, 
	    path=#{photoPath}
    where sno=#{memberNo}
  </update>
  
  <delete id="delete" parameterType="int">
  <![CDATA[
    delete from stud where sno=#{value}
  ]]>
  </delete>

</mapper>








